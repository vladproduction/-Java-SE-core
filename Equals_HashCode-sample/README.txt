hashcode - функция, возвращающая цифру равную индексу объекта в памяти (место в памяти или адрес)

1)Какими свойствами обладает порождаемое equals() отношение эквивалентности?

    -Рефлексивность: для любой ссылки на значение х, x.equals() вернет true;

    -Симметричность: для любых ссылок для значения x и y, x.equals(y) должно вернуть true,
    тогда и только тогда , когда y.equals(x) возвращает true;

    -Транзитивность: для любых ссылок на значения x, y и z, если x.equals(y) и y.equals(z) возвращает
    true, тогда x.equals(z) вернет true;

    -Непротиворечивость: для любых ссылок на значения x и y, если несколько раз вызвать x.equals(y),
    постоянно будет возвращаться значение true; либо постоянно будет возвращаться значение false
    при условии если никакая информация используемая при сравнении объектов не поменялась.

    Для любой ненулевой ссылки на значение x выражение x.equals(null) должно возвращать false.

2)Если equals() переопределен, есть ли какие либо другие методы, которые следует переопределить?
    Равные объекты должны возвращать одинаковые хэш коды. При преопределении equals() нужно
    обязательно переопределять и метод hashCode().

3)Зачем нужен equals(). Чем он отличается от операции ==?
    Метод equals() - определяет отношение эквивалентности объектов.
    При сравнении обьктов с помощью == сравнение происходит лишь между ссылками.При сравнении по
    переопределенному разработчиком equals() - по внутреннему состоянию объектов.